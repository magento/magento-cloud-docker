#!/bin/bash

set -e

USAGE="Magento Cloud Docker

\033[33mArguments:\033[0m
  pull              pull latest images
  up                destroy, re-create and start containers
  down              destroy containers
  bash              connect to bash
  stop              stop containers
  start             start containers
  restart           restart containers
  ece-build         run build hooks
  ece-deploy        run deploy hooks
  ece-post-deploy   run post-deploy hooks
  ece-redeploy      run build, deploy, and post-deploy hooks
  flush-redis       clears redis cache
  flush-varnish     clears varnish cache
  ece-db            access to Database

\033[33mOptions:\033[0m
  -h            show this help text\n"

if [ ${#@} -ne 0 ] && [ "${@#"-h"}" = "" ]; then
    printf "$USAGE"
    exit 0;
fi;

case "$1" in
    pull)
        docker-compose pull
        ;;
    up)
        docker-compose down --volumes
        docker-compose up --detach
        ;;
    down)
        docker-compose down --volumes
        ;;
    bash)
        docker-compose run --rm deploy bash
        ;;
    stop)
        docker-compose stop
        ;;
    start)
        docker-compose start
        ;;
    restart)
        docker-compose restart
        ;;
    ece-build)
        docker-compose run --rm build cloud-build
        ;;
    ece-deploy)
        docker-compose run --rm deploy cloud-deploy
        ;;
    ece-post-deploy)
        docker-compose run --rm deploy cloud-post-deploy
        ;;
    ece-redeploy)
        docker-compose run --rm build cloud-build
        docker-compose run --rm deploy cloud-deploy
        docker-compose run --rm deploy cloud-post-deploy
        ;;
    flush-redis)
        docker-compose exec redis redis-cli FLUSHALL
        ;;
    flush-varnish)
        docker-compose exec varnish varnishadm ban req.url '~' '.'
        ;;
    ece-db)
        docker-compose exec db sh -c 'mysql -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE "$@"'
        ;;
    *)
        printf "$USAGE"
        exit 0;
esac
