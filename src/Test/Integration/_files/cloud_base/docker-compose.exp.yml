version: '2.1'
services:
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.2'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    ports:
      - '3306'
    volumes:
      - 'magento-db:/var/lib/mysql'
      - 'docker-entrypoint:/docker-entrypoint-initdb.d'
      - 'mariadb-conf:/etc/mysql/mariadb.conf.d'
      - 'docker-mnt:/mnt:delegated'
    networks:
      magento:
        aliases:
          - db.magento2.docker
  redis:
    hostname: redis.magento2.docker
    image: 'redis:5.0'
    volumes:
      - /data
    ports:
      - 6379
    networks:
      magento:
        aliases:
          - redis.magento2.docker
  elasticsearch:
    hostname: elasticsearch.magento2.docker
    image: 'magento/magento-cloud-docker-elasticsearch:6.5-1.1'
    networks:
      magento:
        aliases:
          - elasticsearch.magento2.docker
  fpm:
    hostname: fpm.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-fpm-1.1'
    extends: generic
    volumes:
      - 'magento:/app:ro'
      - 'magento-vendor:/app/vendor:ro'
      - 'magento-generated:/app/generated:ro'
      - 'magento-var:/app/var:rw'
      - 'magento-app-etc:/app/app/etc:rw'
      - 'magento-pub-media:/app/pub/media:rw'
      - 'magento-pub-static:/app/pub/static:rw'
      - 'docker-mnt:/mnt:delegated'
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      db:
        condition: service_started
  web:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:latest-1.1'
    extends: generic
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - '80:80'
    volumes:
      - 'magento:/app:ro'
      - 'magento-vendor:/app/vendor:ro'
      - 'magento-generated:/app/generated:ro'
      - 'magento-var:/app/var:rw'
      - 'magento-app-etc:/app/app/etc:rw'
      - 'magento-pub-media:/app/pub/media:rw'
      - 'magento-pub-static:/app/pub/static:rw'
      - 'docker-mnt:/mnt:delegated'
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      fpm:
        condition: service_started
  varnish:
    hostname: varnish.magento2.docker
    image: 'magento/magento-cloud-docker-varnish:latest-1.1'
    networks:
      magento:
        aliases:
          - magento2.docker
    depends_on:
      web:
        condition: service_started
  tls:
    hostname: tls.magento2.docker
    image: 'magento/magento-cloud-docker-tls:latest-1.1'
    ports:
      - '443:443'
    environment:
      HTTPS_UPSTREAM_SERVER_ADDRESS: varnish
    networks:
      magento:
        aliases:
          - tls.magento2.docker
    depends_on:
      varnish:
        condition: service_started
  generic:
    hostname: generic.magento2.docker
    image: alpine
    environment:
      - PHP_MEMORY_LIMIT=2048M
      - UPLOAD_MAX_FILESIZE=64M
      - MAGENTO_ROOT=/app
      - PHP_IDE_CONFIG=serverName=magento_cloud_docker
      - XDEBUG_CONFIG=remote_host=host.docker.internal
      - MAGENTO_CLOUD_RELATIONSHIPS=eyJkYXRhYmFzZSI6W3siaG9zdCI6ImRiIiwicGF0aCI6Im1hZ2VudG8yIiwicGFzc3dvcmQiOiJtYWdlbnRvMiIsInVzZXJuYW1lIjoibWFnZW50bzIiLCJwb3J0IjoiMzMwNiJ9XSwicmVkaXMiOlt7Imhvc3QiOiJyZWRpcyIsInBvcnQiOiI2Mzc5In1dLCJlbGFzdGljc2VhcmNoIjpbeyJob3N0IjoiZWxhc3RpY3NlYXJjaCIsInBvcnQiOiI5MjAwIn1dfQ==
      - MAGENTO_CLOUD_ROUTES=eyJodHRwOlwvXC9tYWdlbnRvMi5kb2NrZXJcLyI6eyJ0eXBlIjoidXBzdHJlYW0iLCJvcmlnaW5hbF91cmwiOiJodHRwOlwvXC97ZGVmYXVsdH0ifSwiaHR0cHM6XC9cL21hZ2VudG8yLmRvY2tlclwvIjp7InR5cGUiOiJ1cHN0cmVhbSIsIm9yaWdpbmFsX3VybCI6Imh0dHBzOlwvXC97ZGVmYXVsdH0ifX0=
      - MAGENTO_CLOUD_VARIABLES=eyJBRE1JTl9FTUFJTCI6ImFkbWluQGV4YW1wbGUuY29tIiwiQURNSU5fUEFTU1dPUkQiOiIxMjMxMjNxIiwiQURNSU5fVVJMIjoiYWRtaW4ifQ==
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium'
  build:
    hostname: build.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-cli-1.1'
    extends: generic
    volumes:
      - 'magento:/app:rw'
      - 'magento-vendor:/app/vendor:rw'
      - 'magento-generated:/app/generated:rw'
      - '~/.composer/cache:/root/.composer/cache:delegated'
    networks:
      magento-build:
        aliases:
          - build.magento2.docker
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
  deploy:
    hostname: deploy.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-cli-1.1'
    extends: generic
    volumes:
      - 'magento:/app:ro'
      - 'magento-vendor:/app/vendor:ro'
      - 'magento-generated:/app/generated:ro'
      - 'magento-var:/app/var:rw'
      - 'magento-app-etc:/app/app/etc:rw'
      - 'magento-pub-media:/app/pub/media:rw'
      - 'magento-pub-static:/app/pub/static:rw'
      - 'docker-mnt:/mnt:delegated'
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
volumes:
  magento:
    driver_opts:
      type: none
      device: '${PWD}/'
      o: bind
  magento-db: {  }
  mariadb-conf:
    driver_opts:
      type: none
      device: '${PWD}/.docker/mysql/mariadb.conf.d'
      o: bind
  docker-entrypoint:
    driver_opts:
      type: none
      device: '${PWD}/.docker/mysql/docker-entrypoint-initdb.d'
      o: bind
  docker-mnt:
    driver_opts:
      type: none
      device: '${PWD}/.docker/mnt'
      o: bind
  magento-vendor: {  }
  magento-generated: {  }
  magento-var: {  }
  magento-app-etc: {  }
  magento-pub-media: {  }
  magento-pub-static: {  }
networks:
  magento:
    driver: bridge
  magento-build:
    driver: bridge
